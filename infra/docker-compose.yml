version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-logs:/var/lib/kafka/logs
      - ./create-topics.sh:/etc/confluent/docker/create-topics.sh:ro
    depends_on: [zookeeper]
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"

  api-gateway:
    build: ../services/api-gateway
    ports:
      - "8080:8080"
    environment:
      - API_PORT=8080
      - KAFKA_ADDR=kafka:9092
      - ANALYSIS_REQUEST_TOPIC=analysis.request
      - TEST_REQUEST_TOPIC=test.request
      # - KAFKA_TOPIC=kline.raw
    depends_on:
      - kafka
      
  stream-service:
    build: ../services/stream-service
    ports:
      - "8090:8080"
    environment:
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw
    depends_on:
      - kafka

  x-kline-fetcher-template: &kline_fetcher_template
    build:
      context: ../services/kline-fetcher   # infra/docker-compose.yml'e göre bir üst dizin
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: on-failure

  binance_ws_kline_1m_group_1:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_1m_group_1
    environment:
      - INTERVAL=1m
      - SYMBOL_GROUP=1
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  binance_ws_kline_1m_group_2:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_1m_group_2
    environment:
      - INTERVAL=1m
      - SYMBOL_GROUP=2
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  binance_ws_kline_1m_group_3:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_1m_group_3
    environment:
      - INTERVAL=1m
      - SYMBOL_GROUP=3
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  binance_ws_kline_5m_group_1:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_5m_group_1
    environment:
      - INTERVAL=5m
      - SYMBOL_GROUP=1
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  binance_ws_kline_5m_group_2:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_5m_group_2
    environment:
      - INTERVAL=5m
      - SYMBOL_GROUP=2
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  binance_ws_kline_5m_group_3:
    <<: *kline_fetcher_template
    container_name: binance_ws_kline_5m_group_3
    environment:
      - INTERVAL=5m
      - SYMBOL_GROUP=3
      - TOTAL_GROUPS=3
      - KAFKA_ADDR=kafka:9092
      - KAFKA_TOPIC=kline.raw

  calc-service:
    build: ../services/calc-service
    ports:
      - "8091:8080"
    environment:
      # - KAFKA_ADDR=kafka:9092
      # - KAFKA_TOPIC=kline.raw
      # - KAFKA_GROUP_ID=calc-group
      # - REDIS_ADDR=redis:6379
      - KAFKA_ADDR=kafka:9092
      - ANALYSIS_REQUEST_TOPIC=analysis.request
      - KAFKA_TOPIC=kline.raw
      - ALERT_TRIGGER_TOPIC=alert.trigger
    depends_on:
      - kafka
      - redis

  notify-service:
    build: ../services/notify-service
    ports:
      - "8092:8080"
    environment:
      - KAFKA_ADDR=kafka:9092
      - KAFKA_GROUP_ID=notify-group
      - KAFKA_ALERT_TOPIC=alert.trigger
      - TELEGRAM_TOKEN=your_token_here
      - TELEGRAM_CHAT_ID=your_chat_id
    depends_on:
      - kafka

  # auth-service:
  #   build: ../services/auth-service
  #   ports:
  #     - "8093:8080"
  #   environment:
  #     - MONGO_URI=mongodb://mongo:27017
  #     - JWT_SIGNING_KEY=supersecret
  #     - TOKEN_TTL=24h
  #   depends_on:
  #     - mongo

  # news-service:
  #   build: ../services/news-service
  #   ports:
  #     - "8094:8080"
  #   environment:
  #     - KAFKA_ADDR=localhost:9092
  #     - KAFKA_NEWS_TOPIC=news.incoming
  #     - NEWS_API_KEY=your_news_api_key
  #   depends_on:
  #     - kafka

  # trade-service:
  #   build: ../services/trade-service
  #   ports:
  #     - "8095:8080"
  #   environment:
  #     - KAFKA_ADDR=localhost:9092
  #     - KAFKA_TRADE_TOPIC=trade.exec
  #     - BINANCE_API_KEY=your_key
  #     - BINANCE_SECRET_KEY=your_secret
  #   depends_on:
  #     - kafka
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JWM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka
  
  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    depends_on:
      - mongo

  
networks:
  default:
    driver: bridge

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  kafka-logs:
# # Kafka container içine girin
# docker-compose exec kafka bash

# kafka-topics --create --topic kline.raw --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic analysis.request --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic indicator.calc --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic alert.trigger --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic news.incoming --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic trade.exec --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1
# kafka-topics --create --topic test.request --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1# 

# # Çık
# exit